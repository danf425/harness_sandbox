template:
    name: Deploy to QA
    identifier: Deploy_to_QA
    versionLabel: "1.0"
    type: Stage
    projectIdentifier: DanF
    orgIdentifier: default
    tags: {}
    spec:
        type: Deployment
        spec:
            serviceConfig:
                serviceRef: nginxservice
                serviceDefinition:
                    type: Kubernetes
                    spec:
                        variables: []
                        artifacts:
                            primary:
                                spec:
                                    connectorRef: Docker_Dmontanez
                                    imagePath: library/nginx
                                    tag: <+input>.allowedValues(latest,1.2.10,3.5.0)
                                type: DockerRegistry
                            sidecars:
                                - sidecar:
                                      spec:
                                          connectorRef: Docker_Dmontanez
                                          imagePath: library/busybox
                                          tag: latest
                                      identifier: Sidecar Test
                                      type: DockerRegistry
            infrastructure:
                infrastructureDefinition:
                    type: KubernetesDirect
                    spec:
                        connectorRef: danfmacconnector
                        namespace: temp-qa
                        releaseName: release-<+INFRA_KEY>
                allowSimultaneousDeployments: false
                environmentRef: QA
            execution:
                steps:
                    - step:
                          type: ShellScript
                          name: Get All Pods
                          identifier: Get_All_Pods
                          spec:
                              shell: Bash
                              onDelegate: true
                              source:
                                  type: Inline
                                  spec:
                                      script: kubectl get all
                              environmentVariables: []
                              outputVariables: []
                              executionTarget: {}
                          timeout: 10m
                    - stepGroup:
                          name: Canary Deployment
                          identifier: canaryDepoyment
                          steps:
                              - step:
                                    name: Canary Deployment
                                    identifier: canaryDeployment
                                    type: K8sCanaryDeploy
                                    timeout: 10m
                                    spec:
                                        instanceSelection:
                                            spec:
                                                percentage: 100
                                            type: Percentage
                                        skipDryRun: false
                              - step:
                                    name: Canary Delete
                                    identifier: canaryDelete
                                    type: K8sCanaryDelete
                                    timeout: 10m
                                    spec: {}
                          rollbackSteps:
                              - step:
                                    name: Canary Delete
                                    identifier: rollbackCanaryDelete
                                    type: K8sCanaryDelete
                                    timeout: 10m
                                    spec: {}
                    - stepGroup:
                          name: Primary Deployment
                          identifier: primaryDepoyment
                          steps:
                              - step:
                                    name: Rolling Deployment
                                    identifier: rollingDeployment
                                    type: K8sRollingDeploy
                                    timeout: 10m
                                    spec:
                                        skipDryRun: false
                          rollbackSteps:
                              - step:
                                    name: Rolling Rollback
                                    identifier: rollingRollback
                                    type: K8sRollingRollback
                                    timeout: 10m
                                    spec: {}
                rollbackSteps: []
        failureStrategies:
            - onFailure:
                  errors:
                      - AllErrors
                  action:
                      type: StageRollback
